from pygame import *
dy = 3
dx = 3
class GameSprite(sprite.Sprite):
   #конструктор класса
   def __init__(self, player_image, player_x, player_y, player_speed,s_long, s_wide):
       super().__init__()
       # каждый спрайт должен хранить свойство image - изображение
       self.image = transform.scale(image.load(player_image), (s_long, s_wide))
       self.speed = player_speed
       # каждый спрайт должен хранить свойство rect - прямоугольник, в который он вписан
       self.rect = self.image.get_rect()
       self.rect.x = player_x
       self.rect.y = player_y
   def reset(self):
       win.blit(self.image, (self.rect.x, self.rect.y))
class Platform(GameSprite):
    def update_one(self):
        key_pressed = key.get_pressed()
        if key_pressed[K_w] and self.rect.y >= 10:
            self.rect.y-=self.speed
        if key_pressed[K_s] and self.rect.y <= 290:
            self.rect.y+=self.speed
    def update_two(self):
        key_pressed = key.get_pressed()
        if key_pressed[K_UP] and self.rect.y >= 10:
            self.rect.y-=self.speed
        if key_pressed[K_DOWN] and self.rect.y <= 290:
            self.rect.y+=self.speed


back = (255, 255, 255)
win_width = 600
win_height = 500
win = display.set_mode((win_width, win_height))
win.fill(back)

clock = time.Clock()
FPS = 60
game = True
finish = False

font.init()
font_s = font.SysFont('Arial', 60)

first_platform = Platform('platform.png', 10, 150, 2, 20, 200)
second_platform = Platform('platform.png', 570, 150, 2, 20, 200)
ball = GameSprite('ball.webp', 250, 200, 5, 65, 65)

while game:
    for e in event.get():
        if e.type == QUIT:
            game = False
    if finish != True:
        first_winner = font_s.render('Первый игрок выиграл', True, (255, 0, 0))
        second_winner = font_s.render('Второй игрок выиграл', True, (255, 0, 0))
        if  ball.rect.y <= 0:
            dy *= -1
        if  ball.rect.y >= 435:
            dy *= -1
        if ball.rect.colliderect(first_platform.rect):
            dx *= -1
        if ball.rect.colliderect(second_platform.rect):
            dx *= -1
        ball.rect.y += dy
        ball.rect.x += dx
        win.fill(back)
        key_pressed = key.get_pressed()
        ball.reset()
        first_platform.update_one()
        first_platform.reset()
        second_platform.reset()
        second_platform.update_two()
    if ball.rect.x >= 535:
        win.blit(first_winner, (30,220))
        finish = True
    if ball.rect.x <= 0:
        finish = True
        win.blit(second_winner, (50, 220))
    display.update()
    clock.tick(FPS)


